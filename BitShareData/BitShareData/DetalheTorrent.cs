//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace BitShareData
{
    public partial class DetalheTorrent
    {
        #region Primitive Properties
    
        public virtual int IdDetalheTorrent
        {
            get;
            set;
        }
    
        public virtual string NomeFilme
        {
            get;
            set;
        }
    
        public virtual string Descricao
        {
            get;
            set;
        }
    
        public virtual string Imagens
        {
            get;
            set;
        }
    
        public virtual string ImagemCapaURL
        {
            get;
            set;
        }
    
        public virtual string TrailerYoutubeURL
        {
            get;
            set;
        }
    
        public virtual string Genero
        {
            get;
            set;
        }
    
        public virtual string AnoLancamento
        {
            get;
            set;
        }
    
        public virtual string Diretor
        {
            get;
            set;
        }
    
        public virtual string Atores
        {
            get;
            set;
        }
    
        public virtual string LinkIMDB
        {
            get;
            set;
        }
    
        public virtual string Resolucao
        {
            get;
            set;
        }
    
        public virtual string CodecAudio
        {
            get;
            set;
        }
    
        public virtual string CodecVideo
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Torrent Torrent
        {
            get { return _torrent; }
            set
            {
                if (!ReferenceEquals(_torrent, value))
                {
                    var previousValue = _torrent;
                    _torrent = value;
                    FixupTorrent(previousValue);
                }
            }
        }
        private Torrent _torrent;
    
        public virtual ICollection<Legenda> Legendas
        {
            get
            {
                if (_legendas == null)
                {
                    var newCollection = new FixupCollection<Legenda>();
                    newCollection.CollectionChanged += FixupLegendas;
                    _legendas = newCollection;
                }
                return _legendas;
            }
            set
            {
                if (!ReferenceEquals(_legendas, value))
                {
                    var previousValue = _legendas as FixupCollection<Legenda>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupLegendas;
                    }
                    _legendas = value;
                    var newValue = value as FixupCollection<Legenda>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupLegendas;
                    }
                }
            }
        }
        private ICollection<Legenda> _legendas;

        #endregion

        #region Association Fixup
    
        private void FixupTorrent(Torrent previousValue)
        {
            if (previousValue != null && ReferenceEquals(previousValue.DetalheTorrent, this))
            {
                previousValue.DetalheTorrent = null;
            }
    
            if (Torrent != null)
            {
                Torrent.DetalheTorrent = this;
            }
        }
    
        private void FixupLegendas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Legenda item in e.NewItems)
                {
                    item.DetalheTorrent = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Legenda item in e.OldItems)
                {
                    if (ReferenceEquals(item.DetalheTorrent, this))
                    {
                        item.DetalheTorrent = null;
                    }
                }
            }
        }

        #endregion

    }
}
